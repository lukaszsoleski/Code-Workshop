init 

git config --global user.name 'Your Name' 

git config --global user.email 'email@example.com'

git config --list

git add index.html 


git rm --cached index.html removes files from the working tree and from the index


git add *.txt


git init 
git init [repository]
git clone
git status 

git add [file name]
git add .
git add --all

git add -A stages All
git add . stages new and modified, without deleted
git add -u stages modified and deleted, without new

git commit 
git commit -m '[commit message]'
clear

git branch \\ list all branches
git branch [branch name] \\ create branch
git checkout [branch name] \\swap to another branch
git branch [branch name] -d \\delete branch 
git checkout -b [name] \\ create new branch and checkout it

// in dev: 
git merge [branch name] \\ git merge master
// checkout to master
git checkout master
git merge dev // merge dev branch 

2#

git clone [url]
git pull
git branch homepage
git checkout homepage
git add .
git status
git reset
touch .gitignore
git add . 
git commit -m ''
git status
git push -u origin homepage # push local branch to remote repository 


git reset --hard HEAD 

git diff #That command compares what is in your working directory with what is in your staging area
git diff --staged #If you want to see what you’ve staged that will go into your next commit, you can use git diff --staged. 
#This command compares your staged changes to your last commit

git commit -a -m 'added new benchmarks'  #-a flag includes all changed files and skips staging process.






